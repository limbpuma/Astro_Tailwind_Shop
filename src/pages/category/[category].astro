---

import Layout from "../../layouts/Layout.astro";
import HeroPages from "../../components/HeroPages.astro";
import ProductCard from "../../components/ProductCard.astro";
import ProductFilter from '../../components/ProductFilter.jsx';


const category = Astro.params.category;


const categoryMapping = {
  men: "men's clothing",
  women: "women's clothing",
  jewelery: "jewelery",
};


const apiCategory = categoryMapping[category] || "men's clothing"; // 


let products = [];
try {
  // `limit` en URL limit=40
  const response = await fetch(`https://fakestoreapi.com/products/category/${apiCategory}?limit=40`);
  if(response.ok) {
    products = await response.json();
  } else {
    throw new Error(`Failed to fetch products: ${response.statusText}`);
  }
} catch (error) {
  console.error("Error fetching products:", error);
}

const title = category.charAt(0).toUpperCase() + category.slice(1); 
---

<Layout title={`Welcome to ${category}`}>
  <div>
    <HeroPages 
  title={title}
  title2="enjoy our offers"
  text="new season!"
  buttonLink="/your-link-here"
  backgroundColor="bg-red-600"
  backgroundImage="/images/hero_1.png"
  subtitle="Discover our latest collection"
/>

  </div>
  <!-- <ProductFilter client:load onFilterChange="handleFilterChange" /> -->


  <div class="my-8 px-8 margin-auto">
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 2xl:grid-cols-6 gap-8 mx-auto">
      {products.map((product) => (
        <ProductCard 
          key={product.id} 
          id={product.id} 
          title={product.title} 
          description={product.description} 
          imageUrl={product.image} 
          price={product.price} 
        />
      ))}
</div>
</Layout>